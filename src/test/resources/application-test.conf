epmsmail {
    mail {
        email.com {
            javaxmail {
                mail {
                    transport.protocol.rfc822 = "mocked"
                    ssl.enable = false
                    store.protocol = "imap"
                    imap {
                        host = "email.com"
                        class = "org.jvnet.mock_javamail.MockStore"
                    }
                    mocked {
                        class = "org.jvnet.mock_javamail.MockTransport"
                    }
                }
            }
        }
    }
    mqtt {
       host = "localhost"
        port = 1883
        sub-topic = "eda/request"
        qos = 1
        consumer-id = "eda-mqtt-client-test"
        topics {
            energyTopic = "eda/response/energy"
            cmTopic = "eda/response/cm"
            cpTopic = "eda/response/cp"
            errorTopic = "eda/response/error"
        }
    }
}

slick.pgsql.local {
  dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
  driver = "slick.driver.PostgresDriver$"
  db {
    driver="org.postgresql.Driver"
    url="jdbc:postgresql://localhost:6432/postgresDB"
    user="postgresUser"
    password="postgresPW"
    queueSize=5000
    connectionTimeout=30000
    maxConnections=8
    minConnections=2
    numThreads=8
  }
}

akka {
  persistence.journal.plugin = "akka.persistence.journal.leveldb"
  persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"

  persistence.journal.leveldb.dir = "storage/test/journal"
  persistence.snapshot-store.local.dir = "storage/test/snapshots"

#   persistence.journal.leveldb.native = false

  actor {
    serialization-bindings {
      "at.energydash.actor.CborSerializable" = jackson-cbor
    }
  }
  test.single-expect-default = "300 seconds"
}